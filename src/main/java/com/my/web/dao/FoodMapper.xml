<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.my.web.dao.FoodMapper" >
  <resultMap id="BaseResultMap" type="com.my.web.model.Food" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="acronym" property="acronym" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="hide" property="hide" jdbcType="BIT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, acronym, description, hide, name, number, price, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from food
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from food
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.my.web.model.Food" >
    insert into food (id, acronym, description, 
      hide, name, number, price, 
      type)
    values (#{id,jdbcType=INTEGER}, #{acronym,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{hide,jdbcType=BIT}, #{name,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{price,jdbcType=DOUBLE}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.my.web.model.Food" >
    insert into food
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="acronym != null" >
        acronym,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="hide != null" >
        hide,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="acronym != null" >
        #{acronym,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="hide != null" >
        #{hide,jdbcType=BIT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.my.web.model.Food" >
    update food
    <set >
      <if test="acronym != null" >
        acronym = #{acronym,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="hide != null" >
        hide = #{hide,jdbcType=BIT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.my.web.model.Food" >
    update food
    set acronym = #{acronym,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      hide = #{hide,jdbcType=BIT},
      name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>